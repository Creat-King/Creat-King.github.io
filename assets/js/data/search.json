[ { "title": "物联网考试复习总结", "url": "/posts/%E7%89%A9%E8%81%94%E7%BD%91%E8%80%83%E8%AF%95%E5%A4%8D%E4%B9%A0/", "categories": "学习资料", "tags": "study", "date": "2023-12-12 10:04:00 +0000", "snippet": "ch1绪论绿野千传：对以碳汇和碳排放为中心的地球环境进行长期大规模监测，全球规模最大、运行时间最长的传感网络应用系统之一==群智感知：== 基本思想：大量普通用户使用移动设备作为基本感知单元，通过移动互联网进行协作，实现感知任务分发和感知数据收集利用，最终完成大规模、复杂的社会感知任务 ==核心理念：有意识部署与无意识协作结合== 社会感知任务的特点：范围广、规模大、任务重 众包（C...", "content": "ch1绪论绿野千传：对以碳汇和碳排放为中心的地球环境进行长期大规模监测，全球规模最大、运行时间最长的传感网络应用系统之一==群智感知：== 基本思想：大量普通用户使用移动设备作为基本感知单元，通过移动互联网进行协作，实现感知任务分发和感知数据收集利用，最终完成大规模、复杂的社会感知任务 ==核心理念：有意识部署与无意识协作结合== 社会感知任务的特点：范围广、规模大、任务重 众包（Crowdsourcing)： 企 业 利 用 互 联 网 将 工 作 分 配 出 去 、 发 现 创 意 或 解决 技 术 问 题 。 通 过 互 联 网 ， 这 些 企 业 可 以 利 用 大 量用 户 的 创 意 和 能 力 。 案例分析：城市交通感知（公交车到站时间预测）无线室内定位：利用手机采集的用户移动性信息构建信号指纹空间==什么是无需传感器感知：====物联网、大数据和人工智能的关系：==ch2无线局域网无线局域网体系结构无线局域网物理组成：无线局域网的拓扑结构1.分布对等式拓扑 是一种独立的BSS，至少有两个站 自组织网络（Ad HOC network） 不需AP，各站之间的关系是对等的、分布式的、无中心的2.基础结构集中式拓扑 需要包括： 分布式系统媒体（DSM） 至少一个AP（接入点），用来转发BSS内通信 端口实体 抗毁性差 传输时延增加：BSS内两个站点通信需要AP转发 3.ESS（扩展服务组）网络拓扑 ESA是由多个BSA通过DS（分配系统）联结形成的一个扩展区域 ESS是由属于同一个ESA的所有站组成，ESS由多个BSS组成4.中继或桥接型网络拓扑 两个或多个网络(LAN或WLAN)或网段通过无线中继器、无线网桥或无线路由器等无线网络互连设备连接起来。（单跳或多跳） 采用中继或桥接型网络拓扑是一种拓展WLAN覆盖范围的有效方法。==不重叠的传输信道：==1、6、11无线局域网的MAC协议1.CSMA|CD协议（碰撞检测）无线局域网不能照搬CSMA/CD协议，会出现以下问题无法解决1.隐藏终端问题2.暴露终端问题2.RTS/CTS 机制（解决隐藏终端问题）——————————————————————————————————————————————————————————————==无法解决暴露终端问题== 总而言之就是RTS或CTS会和已建立起来的传输通道里的data发生碰撞，导致新的传输通道无法建立3.CSMA|CA（冲突避免）1.物理载波监听：通过收到的相对信号强度是否超过一定的门限数值就可判定是否有其他的移动站在信道上发送数据。2.虚拟载波监听：虚拟载波监听”是表示其他站并没有监听信道，而是由于其他站收到了“源站的通知”才不发送数据。所谓“源站的通知”就是源站在其MAC帧首部中的第二个字段“持续时间”中填入了在本帧结束后还要占用信道多少时间，包括目的站发送确认帧所需的时间。==如何实现冲突避免：== 优先级确认协议 随机后退算法==优先级由帧间间隔决定：IFS越短，优先级越高== SIFS（short interframe space）：最短的IFS，被用于所有立即响应的动作中 PIFS（点协调功能IFS）：一个中间长度的IFS DIFS（分布式协调功能IFS）：最长的IFS争用窗口：信道从忙态变为空闲时，任何一个站要发送数据帧时，不仅都必须等待一个DIFS的间隔，还要进入争用窗口，并计算随机退避时间以便再次重新试图接入到信道。竞争窗口类比信道数目，选择同一个信道会发生冲突，那么将扩大竞争窗口PCF（点协调功能方式）和DCF（分布式协调功能方式）4.MAC层主要功能 媒体访问控制 加入网络连接 数据验证和保密==分贝与功率的关系：==100mw=10*lg100 db5.ZigZag算法（解决隐藏终端问题）缺点：如果有几位发送错误 那么后续将会带来更多错误，错误会传播，类似多米诺效益 重传机制 发送端随机抖动缺点：如果有几位发送错误 那么后续将会带来更多错误，错误会传播，类似多米诺效益如何解决：正向和反向两次解析，如果相同则没发生错误，如果不同则选择其中一个结果选择哪一个呢？For each bit, AP picks the decoding that has ahigher PHY confidence。对于每个比特，ap选择具有较高phy置信度的解码无线局域网的部署fat AP ：AP中存储安全配置信息thin AP：AP中不存储配置参数，只是实现无线电波的收发功能第一代无线局域网：Fat AP第二代无线局域网：Thin AP+AC（无线控制器）ch3无线传感器网络1.什么是无线传感网无线传感网通常包括传感器节点、汇聚节点和管理节点无线传感网由大量微型传感器节点组成，通过无线通信方式形成的一个多跳的自组织网络系统 ==传感网与无线网的区别==： 传感网节点数目更庞大、分布更密集，节点更容易出现故障 环境干扰和节点故障容易造成传感网网络拓扑结构的变化 大多数传感器节点固定不动 传感器节点具有的能量、处理能力和通信能力十分有限 无线网的首要设计目标是提供高服务质量和高效带宽利用，其次才考虑节约能源 传感网首要设计目标是能源的高效利用 ==传感网特征：== 大规模 自组织性 动态性 可靠 与应用相关 ==传感节点的特点==： 临近的传感节点拥有相似的数据 传感节点没有全局ID ==传感节点的限制==： 电源能量有限 计算和存储能力有限 通信能力有限 能量消耗与距离有关 E=kd的n次，n一般取3 节点的通信带宽有限 2.无线传感网的应用 医院病房电子巡检 智慧农业 智能家居3.无线传感网体系结构传感器网络分类： 先应式网络：节点定期打开传感器和发送器，感测环境并将数据发送出去 反应式网络：节点根据用户发来的查询命令给予立即响应传感器网络查询分类： 历史查询 一次查询：瞬时状态的查询 持续查询传感网络体系结构分类 层次 层次型架构的问题 能量空洞问题：距离基站越近的结点，能耗越多，距离基站进的结点能力耗光之后，整个网络形成了一个空洞，外部结点虽然有能量，但是已经无法把结点传播给基站了 分簇 通信中存在两个现象:内部爆炸(Implosion)：重复消息来自许多邻居数据重叠(overlap)：同样的事件被交叉覆盖的多个节点感知并发送内部爆炸和数据重叠，都会导致网络资源的浪费==一些算法==：：：看看PPT数据搜集算法天线距离计算题4.定位技术信标节点：已知自己的坐标，也叫锚点4.1无需测距的定位技术1.质心算法基本过程： 信标节点周期性向邻近节点广播信标分组，信标分组中包含信标节点的标识号和位置信息； 当未知节点接收到来自不同信标节点的信标分组数量超过某一个门限k或接收一定时间后，就确定自身位置为这些信标节点所组成的多边形的质心。2.DV-Hop算法基本思想： 首先，计算未知节点与信标节点的最小跳数 然后，估计平均每跳距离，利用最小跳数乘平均每跳距离，得到未知节点与信标节点之间的==估计距离== 最后，利用三边测量法或极大似然估计法计算未知节点的坐标阶段一：计算==最小跳数==：接收节点记录到每个信标节点的最小跳数，忽略来自同一个信标节点的较大跳数分组。然后将跳数值加1，并转发给邻居节点阶段二：估计平均跳段距离利用信标节点之间的已知信息去计算。HopSize：以该信标节点为中心的距离和/最小跳数和，得到该信标节点发出的平均跳段距离未知节点仅记录接收到的第一个每跳平均距离（即从最近的信标节点发出的，最近==跳数最少）阶段三：根据未知节点到各个信标节点的距离，利用三边测量法或极大似然估计法计算自身坐标==三边测量法或极大似然估计法怎么算？？==3.DV-Hop改进改进平均每跳距离的计算方法原方法：以某信标节点为中心，到其他信标节点的 距离和/最小跳数和改进后：利用最小均方误差4.APIT算法（近似三角形内点测试法）PIT（假设M为动态点）：假如存在一个方向，沿着这个方向节点M会同时远离或接近参考节点A.B、C，那么节点M位于三角形ABC外部，如图1所示;否则，M位于三角形ABC内部，如图2所示。APIT（M为静态的）：通过与相邻节点的信息交换来模拟PIT算法如何计算重叠区域：APIT的缺点：通过上述分析发现，APIT算法仅仅分析几个有限的方向，而且定位覆盖率 (可实现定位的未知节点数目与总的未知节点数目之比) ==与相邻节点数量及分布密切相关==，因此APIT算法==有时会做出不正确的判断以及存在大量无法定位的节点==。5.定位相关的其他技术（必考计算题）RSD通过位置序列来定位假设：距离越近，信号强度越大，排序越靠前相对距离计算：（好像没什么用） 确定邻居序列并进行排序 计算序列之间的特征距离 修正两节点之间的特征距离邻居节点序列怎么写： 基于所接受到信号强度 从自身开始，降序排列 邻居序列隐含意义：根据前后顺序可知，位于垂直平分线的两侧还是同侧==显式不同节点对：====隐式不同节点对：====疑似不同节点对：====特征距离计算：==SD=显式不同节点对个数+隐式不同节点对个数+疑似不同节点对个数*0.5修正：SD = SD/总对数RSD：12/15*根号6/154.2需要测距的定位技术1.三边定位和多边定位基于时间的定位怎么考？给数据和案例，学生给出解决方案并求出距离以及坐标TOA：发射机和接收机时间需要严格同步（不容易做到）TDOA：需要增加声波模块2.接收信号角度定位5.典型定位系统看看PPT 感觉不考6.传感网时间同步机制分布式系统的协同工作需要传感器节点间的时间同步1.时间同步技术关键问题影响时间同步的传输时延： 发送时间： 访问时间： 传送时间： 传播时间： 接收时间： 接受时间：用于处理接收到的报文的时间2.网络时间协议NTP工作原理可以看出,t、d只与T2T1差值及T3T4差值相关,而与T2、T3 差值无关,即最终的结果与服务器处理请求所需的时间无关。据此，客户端即可通过 TIT2T3、T4计算出时差t去调整本地时钟==NTP适合因特网，不适用在传感网中，原因如下：== 传感网链路不稳定，通信易中断 传感网拓扑结构动态变化，无法手动配置时间服务器 NTP协议需要其他基础设施协助,ru GPS ，传感网无法实现 传感网资源有限，需考虑能量消耗3.RBS【基于接收者/接收者时间同步协议】RBS基本思想：多个节点接收同一个同步信号，然后多个收到同步信号的节点之间进行同步。该算法消除了同步信号发送一方的时间不确定性。优点：时间同步与MAC层协议分离缺点：协议开销大4.TPSN【基于发送者/接收者时间同步协议】通过基于发送者一接收者的结点对方式，每个结点与上一级的一个结点进行同步，从而最终所有结点都与根结点实现时间同步。ch4新技术1.工业互联网和消费互联网的区别2.工业4.0 VS 工业互联网3.中国制造2025实现制造业由大变强的转变4.数字孪生数字孪生由三部分组成： 物理空间的实体产品 虚拟空间的虚拟产品 虚实之间的连接数据和信息==数字孪生五维模型：== 物理实体 虚拟实体 连接 孪生数据 服务 数字孪生车间DTS： 数字孪生十大领域应用探索：" }, { "title": "大数据可视化考试复习", "url": "/posts/%E6%96%87%E6%A1%88/", "categories": "学习资料", "tags": "study", "date": "2023-11-10 08:14:00 +0000", "snippet": "*大数据可视化**题型设置*7个论述题 56分不要写的太简单每章一个知识点（包括云平台）3个分析设计题matplot+echarts 4中图表，包括组合叠加给代码画图形matplotlib必考子图matplotlib基本样式，（线形、点型）echarts基本样式*ch1*数据可视化的概念：数据可视化是基于计算机图形学原理和图形图像处理技术，将数据转换成图形或图像呈现出来，并可进一步交互处理...", "content": "*大数据可视化**题型设置*7个论述题 56分不要写的太简单每章一个知识点（包括云平台）3个分析设计题matplot+echarts 4中图表，包括组合叠加给代码画图形matplotlib必考子图matplotlib基本样式，（线形、点型）echarts基本样式*ch1*数据可视化的概念：数据可视化是基于计算机图形学原理和图形图像处理技术，将数据转换成图形或图像呈现出来，并可进一步交互处理的，关于数据视觉表现的理论、方法和技术。数据可视化的标准：实用性、完整性、真实性、艺术性、交互性面临的挑战：数据呈现形式对策：发展了高分、高清晰度、大屏幕拼接可视化技术。结合数据实时绘制技术和GIS空间数据可视化技术，实现了数据的实时图形可视化、场景可视化和实时交互o（1）正确认识数据可视化的意义。o（2）重视数据的质量。o（3）改善数据可视化的硬件条件。o（4）重视可视化的评估。四个V：(1)体量(Volume)：使用数据量很大的数据集开发，并从大数据中获得意义。(2)多源(Variety)：开发过程中需要尽可能多的数据源。(3)高速(Velocity)：企业不用再分批处理数据，而是可以实时处理全部数据。(4)质量(Value)：不仅为用户创建有吸引力的信息图和热点图，还能通过大数据获取意见，创造商业价值。• 数据：数据值，数字、符号、图像、音频等• 图形：图形一般指在一个二维空间中的若干空间形状，可由计算机绘制的图形有直线、圆、曲线、图标以及各种组合形状等。• 数据、图形与可视化：数据可视化可通过对真实数据的采集、清洗、预处理、分析等过程建立数据模型，并最终将数据转换为各种图形，以打造较好的视觉效果。数据可视化的分类：科学可视化信息可视化可视化分析*科学可视化*：科学可视化是数据可视化中的一个应用领域，科学可视化需要对数据和模型进行解释，操作和处理，旨在寻找其中的模式，特点，关系和异常情况。关注三维空间*信息可视化*：处理的对象是抽象数据集合，其表现形式通常在二维空间*可视化分析*：可视化分析是科学可视化与信息可视化领域发展的产物，侧重于借助交互式的用户界面而进行对数据的分析与推理。形成人脑智能和机器智能优势互补和相互提升数据可视化的目标：从应用角度来看：• 有效呈现数据中的重要特征• 揭示事物内部客观规律以及数据间的内在联系。• 辅助人们理解事物概念和过程。• 对模拟和测量进行质量监控• 提高科研开发效率。从宏观角度看：信息记录、信息分析和信息传播数据可视化的作用：数据表达、数据操作和数据分析。数据可视化的特征：功能特征使用人群特征应用场景特征*ch2*波长越短，频率越高，能量越强光源分类（1）热辐射产生的光，例如太阳光。（2）原子跃迁发光，例如荧光灯发光。（3）物质内部带电粒子加速运动时所产生的光，例如，同步加速器工作时发出的同步辐射光。视错觉几何学错觉由图像本身的构造导致的称为几何学错觉生理错觉主要来自人体的视觉适应现象，人的感觉器官在接受过久的刺激后会钝化，产生视觉暂留认知错觉这更多属于认知心理学的讨论范围色彩分类：原色、间色、复色• 原色：色彩中不能再分解的基本色称为原色，红黄蓝• 间色：由两个原色混合得间色，橙绿紫• 复色：两个间色和其对应的间色、一种原色和其对应的间色混合而成色彩冷暖：人的心理联想，暖色、冷色和中性色色彩的轻重感：色彩的轻重感主要与色彩的明度有关。色彩的明度主要取决于本身对自然光的反射率。色彩的软硬感：色彩的软硬感主要也来自色彩的明度，但与纯度也存在着一定的关系。色彩的纯度取决于它在反射和吸收光时对光谱成分选择的宽窄程度色彩的前后感：色彩的前后感是根据人们对色彩距离的感受而划分的类型，一般可分为前进色和后退色，前进色是人们视觉距离短、显得凸出的颜色，反之是后退色。可视化编码：几何标记+视觉通道几何标记：几何标记是指可视化中常见的一些几何图形元素，例如：点、线、面、体等。视觉通道：视觉通道是指用于控制几何标记的展示特性，包括标记的位置、大小、长度、形状、方向、色调、饱和度、亮度等。用于定性的和分类性质的视觉通道o1）位置o2）色调o3）形状o4）图案o5）方向用于定量的或者定序性质的视觉通道o1）坐标轴位置o2）尺寸o3）饱和度o4）亮度o5）图案密度视觉通道与视觉原理o*1.* *潜意识处理*o*2.* *格式塔视觉原理*o*3.* *爱德华塔夫特原则*数据可视化流程以数据为基础，数据流为导向的系统流程，包含：数据采集：数据可视化的基础是数据，数据可以通过仪器采样、调查记录等方式进行采集数据处理：采集得来的原始数据一方面不可避免含有噪声和误差，另一方面数据的模式和特征往往被隐藏。因此，通过数据处理能够保证数据的完整性、有效性、准确性、一致性和可用性。可视化映射： 它用于*把不同数据之间的联系映射为可视化视觉通道中的不同元素*，如标记的位置、大小、长度、形状、方向、色调、饱和度、亮度等。用户感知：用户从数据的可视化结果中提取有用的信息、知识和灵感。数据可视化设计原则o1）为用户设计作品o 2）为作品的内容分类o 3）版式中的元素对齐o 4）视觉要素的重复/统一o 5）作品内容的对比/强调o 6）表述准确、简洁数据可视化设计技巧建立视觉层次，用醒目的颜色突出数据，淡化其他元素高亮显示重点内容提升不同区域的色阶跨度借助场景来表现数据指标将抽象的不易理解的数字转换为容易被人感知的图表尽量让图表简洁图片格式• 矢量图（graphic）：以线段、曲线等图形几何特征来存储信息。• 位图（image）：点阵图，由不同颜色的像素点组成。数据可视化以数据为基础，以数据流为导向*ch3*这些类图看看PPT吧文本可视化流程：文本可视化涵盖了信息收集、文本信息挖掘（数据预处理、数据挖掘、知识表示）、视觉绘制和交互设计等过程。实现：可视化类型：– （1）基于文本内容的可视化。基于文本内容的可视化研究包括基于词频的可视化和基于词汇分布的可视化，*常用的有词云、分布图和 Document Cards* 等。– （2）基于文本关系的可视化。基于文本关系的可视化研究文本内外关系，帮助人们理解文本内容和发现规律。*常用的可视化形式有树状图、节点连接的网络图、力导向图、叠式图和 Word Tree 等*。– （3）基于多层面信息的可视化。基于多层面信息的可视化主要研究如何结合信息的多个方面帮助用户从更深层次理解文本数据，发现其内在规律。其中，包含时间信息和地理坐标的文本可视化近年来受到越来越多的关注。*常用的有地理热力图、ThemeRiver、SparkClouds、TextFlow 和基于矩阵视图的情感分析可视化等。*词云概念：词云，也称为标签云或是文字云，它是一种典型的文本可视化技术。词云对文本中*出现频率较高的“关键词”予以视觉上的突出*，从而形成“关键词云层”或“关键词渲染”。实现：网络可视化网络可视化通常是展示数据在网络中的关联关系，一般用于描绘互相连接的实体。空间信息可视化空间信息可视化是指运用计算机图形图像处理技术，将复杂的科学现象和自然景观及一些抽象概念图形化的过程。ch4*Numpy库*ndarray，一个具有矢量算术运算和复杂广播能力的快速且节省空间的多维数组。创建数组⁣1. 将列表转换为数组⁣2. 创建全零全一的数组⁣3. 创建随机数组arr = np.random.randn(5, 4) # 正态分布的数据索引和切片*Pandas库*pandas中有两大核心数据结构：Series（一维数据，键值对形式） 和 DataFrame（多特征数据,既有行索引,又有列索引）Series的创建：使用Python数组创建使用numpy数组创建使用python字典创建与普通numpy数组相比，可以通过索引的方式选取Series中的单个或一组值DataFrame创建：构成DataFrame的方法很多，最常用的一种是直接传入一个由等长列表或numpy数组组成的字典*ch5 Web技术**HTML5技术基础*纯静态网页：&lt;h1&gt;、&lt;p&gt;、、、&lt;table&gt;标签JavaScript：实现动态交互CSS：样式表美化动态网页：可以访问数据库动态网页技术的优点：l 可以用数据库作为基础来展示网页内容l 可以实现表单和一些简单交互l 再也不用编写一大堆静态页面了动态网页技术缺点：l 网页总是刷新,每次数据交互必然会刷新一次页面。l 网页和后端逻辑混合,查问题的效率很低。l 有大量重复代码无法复用。（无法做到局部更新Ajax：实现异步更新，能在不更新整个页面的前提下维护数据。Jquery：异步更新，无需getelementbyid,但依旧需要显式绑定组件Vue：将数据与组件双向绑定SPA: Single Page Application，典型使用的前端三大框架AngularJS、React、Vue;这些前端框架参考了后端MVC进行设计拆分，以追寻可维护性和可复用性三大前端的对比，实在看不懂了DOM：文档即对象模型；是一种处理HTML和XML文件的标准API。DOM提供了对整个文档的访问模型，将文档作为一个树形结构，树的每个结点表示了一个HTML标签或标签内的文本项。DOM树结构精确地描述了HTML文档中标签间的相互关联性。将HTML或XML文档转化为DOM树的过程称为解析(parse)。对HTML文档的处理可以通过对DOM树（节点对象）的操作（增删查改）实现。*位图与矢量图*位图： 点阵图；l 最小单位由像素构成的图，缩放会失真。构成位图的最小单位是像素，位图就是由像素阵列的排列来实现其显示效果的。l 每个像素都有自己的颜色信息（色相、饱和度、明度）l 对图像的操作改变的对象是像素l 常见格式：JPG JPEG GIF PNG BMP TIFF矢量图：向量图；l 缩放不失真l 通过记录多个对象的组合生成，每个对象以数学函数实现l 矢量图实际上并不是像位图那样纪录画面上每一点的信息，而是记录了元素形状及颜色的算法。l 常见格式：WMF SVG AI SWF二者对比：l 位图的好处是，色彩变化丰富，编辑上，可以改变任何形状的区域的色彩显示效果，相应的，要实现的效果越复杂，需要的象素数越多，图像文件的大小[长宽]和体积[存储空间]越大。（色彩丰富、方便编辑、代价大）l 矢量的好处是，轮廓的形状更容易修改和控制，但是对于单独的对象，色彩上变化的实现不如位图来的方便直接。另外，支持矢量格式的应用程序也远远没有支持位图的多，很多矢量图形都需要专门设计的程序才能打开浏览和编辑。（兼容性差、形状控制方便）l 矢量图可以很容易的转化成位图，但是位图转化为矢量图却并不简单，往往需要比较复杂的运算和手工调节。l 矢量和位图在应用上也是可以相互结合的，比如在矢量文件中嵌入位图实现特别的效果，再比如在三维影象中用矢量建模和位图贴图实现逼真的视觉效果等等。*HTML5 Canvas和SVG技术基础*Canvas通过JS绘制2D标量图，像一块幕布，可以绘制各种图表动画；特点有：l 绘制的是2D标量图l 逐像素渲染l 图形一旦绘制完成就不会被浏览器继续关注，如果位置变化就需要将整个场景重新绘制l 比传统的JS+Flash绘图方式简单Canvas坐标系统，以像素为单位SVG （Scalable Vector Graphics）可缩放矢量图，是一种基于 XML 语法的描述二维图形的语言图像格式。SVG 则是属于对图像的形状描述，本质上是文本。特点有：l 文本文件，体积小，不失真，是与分辨率无关的矢量图格式l 允许三种类型的图像对象：矢量图形、图像和文本l 可嵌入网页（DOM）、文件（XML），被CSS使用、转为BASE64编码？？二者对比Canvasl 依赖分辨率l 不支持事件处理器l 弱的文本渲染能力l 能够以 .png 或 .jpg 格式保存结果图像l 最适合图像密集型的游戏，其中的许多对象会被频繁重绘SVGl 不依赖分辨率l 支持事件处理器l 最适合带有大型渲染区域的应用程序（比如谷歌地图）l 复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）l 不适合游戏应用Echarts 基于Canvas，适用于数据量比较大的情况。Highcharts 基于SVG，方便自己定制，但图表类型有限。*掌握Echarts可视化库*https://echarts.apache.org/zh/option.html#title*JSON和Web服务端技术*传统Web问题：1、系统之间缺乏良好的互操作性2、系统内部耦合度较强，应用模式不够灵活数据通信格式的对比——XML和JSON的优缺点对比(1).可读性方面。JSON和XML的数据可读性基本相同，JSON和XML的可读性可谓不相上下，一边是建议的语法，一边是规范的标签形式，XML可读性较好些。(2).可扩展性方面。XML天生有很好的扩展性，JSON当然也有，没有什么是XML能扩展，JSON不能的。(3).编码难度方面。XML有丰富的编码工具，比如Dom4j、JDom等，JSON也有json.org提供的工具，但是JSON的编码明显比XML容易许多，即使不借助工具也能写出JSON的代码，可是要写好XML就不太容易了。(4).解码难度方面。XML的解析得考虑子节点父节点，让人头昏眼花，而JSON的解析难度几乎为0。这一点XML输的真是没话说。(5).流行度方面。XML已经被业界广泛的使用，而JSON才刚刚开始，但是在Ajax这个特定的领域，未来的发展一定是XML让位于JSON。(6).解析手段方面。JSON和XML同样拥有丰富的解析手段。(7).数据体积方面。JSON相对于XML来讲，数据的体积小，传递的速度更快些。(8).数据交互方面。JSON与JavaScript的交互更加方便，更容易解析处理，更好的数据交互。(9).数据描述方面。JSON对数据的描述性比XML较差。(10).传输速度方面。JSON的速度要远远快于XML。RESTful HTTP：表现层状态转移，指的是一组架构约束条件和原则。WEB程序最重要的REST原则是：客户端与服务器之间的交互请求是无状态的。架构特点：oREST属于Web Services技术范畴。o（1）每个URI代表一种资源。o（2）客户端和服务端之间，传递这种资源的某种表现层。o（3）客户端通过四个HTTP动作指令，对服务器端资源进行操作。​ GET:用来获取资源；​ POST:用来新建资源（也可用于更新资源）；​ PUT:用来更新资源；​ DELETE:用来删除资源。SOA：基于webapi，重要的表现形式是spa 单页应用。可以不用一次请求一个网页，而是api更新数据ü封装可以实现重用ü采用独立的实现接口描述，容易整合各种应用ü由于明确定义了应用系统间的接口，容易实现应用流程模型－－就象搭积木！*ch6 数据库技术**结构化数据、非结构化数据与半结构化数据*结构化数据：l 概念：由二维表结构来逻辑表达和实现的数据，也称为行数据l 特点：数据以行为单位，一行数据表示一个实体的信息，每一行数据的属性是相同的非结构化数据：l 概念：数据结构不规则或不完整，没有任何预定义的数据模型，不方便用二维逻辑表来表现的数据l 举例：（Word）、文本、图片、HTML、各类报表、视频音频等。半结构化数据：介于结构化与非结构化数据之间的数据，它是结构化数据的一种形式，虽然不符合二维逻辑这种数据模型结构，但是包含相关标记，用来分割语义元素以及对记录和字段进行分层。常见的半结构化数据有XML和JSON*常用数据库的使用*RDBMS数据库特点：- o- 高度组织化结构化数据- o- 结构化查询语言（SQL）- o- 数据和关系都存储在单独的表中。- o- 数据操纵语言，数据定义语言- o- 严格的一致性- o- 基础事务NoSQL数据库（Not Only SQL）泛指非关系型数据库，是对关系型数据库的一种补充特点：l o- 代表着不仅仅是SQLl o- 没有声明性查询语言l o- 没有预定义的模式l o-键 - 值对存储，列存储，文档存储，图形数据库l o- 最终一致性，而非ACID属性l o- 非结构化和不可预知的数据l o- CAP定理l o- 高性能，高可用性和可伸缩性*SQLite、MySQL、Neo4j*SQLite:SQLite 是一个软件库，实现了自给自足的、无服务器的、零配置的、事务性的 SQL 数据库引擎。SQLite 是在世界上最广泛部署的 SQL 数据库引擎。SQLite 源代码不受版权限制。MySQL:MySQL 是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。Neo4j:Neo4j是一个高性能的NOSQL图形数据库，它将结构化数据存储在网络上而不是表中。它是一个嵌入式的、基于磁盘的、具备完全的事务特性的Java持久化引擎，但是它将结构化数据存储在网络(从数学角度叫做图)上而不是表中。Neo4j也可以被看作是一个高性能的图引擎，该引擎具有成熟数据库的所有特性。*有关数据库的连接方法*Sqoop是一个用来将Hadoop和关系型数据库中的数据相互转移的工具，可以将一个关系型数据库（例如 ： MySQL ,Oracle ,Postgres等）中的数据导入到Hadoop的HDFS中，也可以将HDFS的数据导入到关系型数据库中。hive是基于Hadoop的一个数据仓库工具，用来进行数据提取、转化、加载hive的优点是学习成本低，hive十分适合对数据仓库进行统计分析。*ch7云平台可视化开发平台*云计算分类：SAAS PAAS IAASDLV的特点：o（1）丰富多样的可视化组件o（2）可视化编辑器o（3）专业级地理信息可视化o（4）多种数据源支持*ch9空间信息可视化技术*空间信息：反映地理实体空间分布特征的信息空间分布特征：实体的位置、形状及实体间的空间关系、区域空间结构等空间信息可视化形式：地图、多媒体地学信息、三维仿真地图和虚拟环境等AR全称Augmented Reality，即增强现实技术VR全称Virtual Reality，即虚拟现实技术，又称灵境技术，具有沉浸性、交互性和构想性特征MR全称Mixed Reality，即混合现实技术，是虚拟现实技术的进一步发展。它是通过在虚拟环境中引入现实场景信息，将虚拟世界、现实世界和用户之间搭起一个交互反馈信息的桥梁空间数据类型——GeoJSON点要素 多点 线要素 多线要素 多边形 多个多边形o线要素就是指线段，记录的是线的端点坐标，可视化时会按照记录顺序联结。多边形Polygon，单个多边形是一个3维数组，可以包含多个二维数组，这种情况和MultiPolygon效果类似。存的也是点 点连起来构成多边形PyMOL适用于创作高品质的小分子或是生物大分子（特别是蛋白质）的三维结构图像，文件格式为PDB" }, { "title": "test！", "url": "/posts/hello-world/", "categories": "随笔", "tags": "生活", "date": "2022-03-26 02:34:00 +0000", "snippet": "毫米波雷达体征信号监测算法汇总传统信号处理方法 算法类别 具体算法 算法描述 开源代码情况 代表性论文 论文年份 **FFT系列** FFT 快速傅里叶变换提取频域特征 ✅ MATLAB/Python通用 \"Contactless Vital Si...", "content": "毫米波雷达体征信号监测算法汇总传统信号处理方法 算法类别 具体算法 算法描述 开源代码情况 代表性论文 论文年份 **FFT系列** FFT 快速傅里叶变换提取频域特征 ✅ MATLAB/Python通用 \"Contactless Vital Signs Monitoring Using 24GHz FMCW Doppler Radar\" 2019 **FFT系列** STFT 短时傅里叶变换分析时频特性 ✅ 多种语言实现 \"Real-time vital signs detection and classification using 24 GHz continuous wave Doppler radar\" 2020 **FFT系列** Welch方法 功率谱密度估计改善频域分析 ✅ SciPy等库 \"Noncontact vital sign detection using Doppler radar\" 2018 **小波变换** CWT 连续小波变换多分辨率分析 ✅ PyWavelets/MATLAB \"Continuous wavelet transform for non-contact vital sign monitoring with IR-UWB radar\" 2021 **小波变换** DWT 离散小波变换信号分解 ✅ 多种实现 \"Discrete wavelet transform based vital sign extraction using FMCW radar\" 2020 **小波变换** 小波包分解 更精细的频带分解 ✅ WavPack等 \"Wavelet packet decomposition for heartbeat detection using UWB impulse radar\" 2019 **EMD系列** EMD 经验模态分解自适应信号分解 ✅ PyEMD库 \"Empirical mode decomposition based vital signs extraction from Doppler radar\" 2020 **EMD系列** EEMD 集合经验模态分解抑制模态混叠 ✅ PyEMD库 \"Enhanced vital signs monitoring using EEMD and FMCW radar\" 2021 **EMD系列** CEEMDAN 完全噪声辅助EMD ✅ PyEMD库 \"CEEMDAN-based vital sign extraction from millimeter wave radar signals\" 2022 **EMD系列** VMD 变分模态分解理论基础更强 ✅ vmdpy库 \"Variational mode decomposition for contactless heart rate monitoring using FMCW radar\" 2021 **VMD优化系列** IAPVMD 改进自适应参数VMD ⚠️ 部分开源 \"Improved adaptive parameter VMD for vital sign extraction from mmWave radar\" 2022 **VMD优化系列** PSO-VMD 粒子群优化VMD参数选择 ✅ 自定义实现 \"PSO-optimized VMD for enhanced heart rate detection using FMCW radar\" 2021 **VMD优化系列** GA-VMD 遗传算法优化VMD ✅ DEAP库 \"Genetic algorithm optimized VMD for robust vital sign monitoring\" 2022 **VMD优化系列** GWO-VMD 灰狼优化算法VMD ✅ 自定义实现 \"Grey wolf optimizer based VMD for breathing pattern analysis\" 2021 **VMD优化系列** SSA-VMD 麻雀搜索算法VMD ⚠️ 部分开源 \"Sparrow search algorithm optimized VMD for heart rate variability analysis\" 2022 **VMD优化系列** WOA-VMD 鲸鱼优化算法VMD ✅ 自定义实现 \"Whale optimization algorithm enhanced VMD for contactless monitoring\" 2021 **VMD优化系列** MVMD 多变量VMD处理多通道信号 ✅ 研究实现 \"Multivariate VMD for multi-antenna radar vital sign detection\" 2020 **VMD优化系列** AVMD 自适应VMD自动确定参数 ✅ 部分实现 \"Adaptive VMD for automatic vital sign extraction from radar signals\" 2021 **VMD优化系列** RVMD 鲁棒VMD抗噪声干扰 ⚠️ 研究阶段 \"Robust VMD for vital sign monitoring in noisy environments\" 2022 **ICA系列** FastICA 快速独立成分分析分离混合信号 ✅ scikit-learn \"Independent component analysis for vital sign separation in Doppler radar\" 2020 **ICA系列** Infomax ICA 信息最大化ICA ✅ MNE-Python \"Multi-channel radar vital sign monitoring using ICA\" 2019 **滤波方法** 卡尔曼滤波 状态估计和信号跟踪 ✅ 多种实现 \"Kalman filter based vital sign tracking using millimeter wave radar\" 2020 **滤波方法** 粒子滤波 非线性非高斯状态估计 ✅ FilterPy等 \"Particle filter for robust vital sign estimation in radar systems\" 2021 **滤波方法** 维纳滤波 最优线性滤波器 ✅ SciPy实现 \"Wiener filtering for noise reduction in contactless vital monitoring\" 2019 **峰值检测** 自适应阈值 动态阈值峰值检测 ✅ SciPy.signal \"Adaptive peak detection for heart rate extraction from radar signals\" 2020 **峰值检测** 模板匹配 基于模板的心跳检测 ✅ OpenCV/SciPy \"Template matching for heartbeat detection in FMCW radar\" 2021 **相位解缠** 一维相位解缠 解决相位跳跃问题 ✅ unwrap函数 \"Phase unwrapping techniques for vital sign monitoring using FMCW radar\" 2020 **相位解缠** 二维相位解缠 多通道相位解缠 ✅ scikit-image \"2D phase unwrapping for enhanced vital sign detection\" 2021 **谐波分析** 基频估计 估计心率/呼吸基本频率 ✅ librosa/SciPy \"Fundamental frequency estimation for vital sign monitoring using mmWave radar\" 2020 **谐波分析** 谐波峰值检测 检测多次谐波峰值 ✅ SciPy.signal \"Harmonic peak detection for robust heart rate estimation from radar\" 2021 **谐波分析** 多重谐波估计 同时估计多个谐波分量 ✅ 自定义实现 \"Multiple harmonic estimation for enhanced vital sign accuracy\" 2020 **谐波分析** 自适应谐波分解 自适应提取谐波成分 ⚠️ 研究实现 \"Adaptive harmonic decomposition for contactless health monitoring\" 2021 **谐波分析** 谐波重构 基于谐波成分重构信号 ✅ NumPy实现 \"Harmonic reconstruction for noise-robust vital sign detection\" 2022 **谐波分析** 谐波分离 分离心率和呼吸谐波 ✅ 自定义算法 \"Harmonic separation techniques for simultaneous heart rate and respiration monitoring\" 2021 **谐波分析** 子空间谐波分析 基于子空间的谐波检测 ⚠️ MATLAB实现 \"Subspace-based harmonic analysis for vital sign extraction from FMCW radar\" 2020 **谐波分析** MUSIC谐波估计 MUSIC算法估计谐波频率 ✅ 信号处理库 \"MUSIC-based harmonic frequency estimation for contactless vital monitoring\" 2021 **谐波分析** ESPRIT谐波分析 ESPRIT算法谐波参数估计 ✅ 部分实现 \"ESPRIT harmonic analysis for precise heart rate detection using radar\" 2020 **谐波分析** 谐波相位跟踪 跟踪谐波相位变化 ✅ 自定义实现 \"Harmonic phase tracking for continuous vital sign monitoring\" 2022 **谐波分析** 谐波比分析 分析谐波能量比例 ✅ SciPy实现 \"Harmonic ratio analysis for health status assessment using radar\" 2021 深度学习方法 算法类别 具体算法 算法描述 开源代码情况 代表性论文 论文年份 **CNN系列** 1D-CNN 一维卷积神经网络处理时序信号 ✅ TensorFlow/PyTorch \"1D CNN for contactless vital sign monitoring using mmWave radar\" 2021 **CNN系列** 2D-CNN 二维CNN处理时频图像 ✅ Keras实现 \"2D CNN based vital sign estimation from radar spectrograms\" 2022 **CNN系列** ResNet 残差网络深层特征提取 ✅ torchvision \"ResNet-based heart rate estimation from FMCW radar signals\" 2021 **CNN系列** DenseNet 密集连接网络 ✅ torchvision \"DenseNet for robust vital sign detection in noisy environments\" 2022 **RNN系列** LSTM 长短期记忆网络处理序列 ✅ TensorFlow/PyTorch \"LSTM networks for real-time vital sign monitoring using radar\" 2020 **RNN系列** GRU 门控循环单元 ✅ 主流框架 \"GRU-based breathing pattern analysis using mmWave radar\" 2021 **RNN系列** Bi-LSTM 双向LSTM ✅ 主流框架 \"Bidirectional LSTM for improved heart rate variability analysis\" 2022 **混合架构** CNN-LSTM CNN特征提取+LSTM时序建模 ✅ 多种实现 \"CNN-LSTM hybrid model for contactless vital sign monitoring\" 2021 **混合架构** CNN-GRU CNN+GRU混合架构 ✅ 自定义实现 \"Deep learning approach for vital sign extraction using CNN-GRU\" 2022 **注意力机制** Transformer 自注意力机制 ✅ Transformers库 \"Transformer networks for vital sign monitoring from radar data\" 2022 **注意力机制** Attention-LSTM 注意力机制增强LSTM ✅ 自定义实现 \"Attention-based LSTM for enhanced vital sign detection accuracy\" 2021 **生成模型** VAE 变分自编码器 ✅ TensorFlow/PyTorch \"Variational autoencoder for vital sign signal reconstruction\" 2021 **生成模型** GAN 生成对抗网络数据增强 ✅ 多种实现 \"GAN-based data augmentation for radar vital sign datasets\" 2022 **强化学习** DQN 深度Q网络自适应参数调整 ✅ Stable-Baselines3 \"Deep Q-learning for adaptive vital sign monitoring parameters\" 2022 **图神经网络** GCN 图卷积网络多人监测 ✅ PyTorch Geometric \"Graph convolutional networks for multi-person vital sign monitoring\" 2022 高级算法和组合方法 算法类别 具体算法 算法描述 开源代码情况 代表性论文 论文年份 **集成学习** Random Forest 随机森林分类回归 ✅ scikit-learn \"Random forest for vital sign classification using radar features\" 2020 **集成学习** XGBoost 极端梯度提升 ✅ XGBoost库 \"XGBoost-based heart rate estimation from mmWave radar\" 2021 **集成学习** LightGBM 轻量级梯度提升 ✅ LightGBM库 \"LightGBM for efficient vital sign monitoring in edge devices\" 2022 **迁移学习** 预训练模型 利用预训练网络迁移 ✅ torchvision \"Transfer learning for cross-subject vital sign monitoring\" 2021 **迁移学习** 域适应 跨域适应技术 ✅ 部分开源 \"Domain adaptation for robust radar-based vital monitoring\" 2022 **多模态融合** 早期融合 特征级融合 ✅ 自定义实现 \"Multi-modal fusion for enhanced vital sign accuracy\" 2021 **多模态融合** 晚期融合 决策级融合 ✅ 自定义实现 \"Late fusion strategies for radar-based health monitoring\" 2022 **联邦学习** FedAvg 联邦平均算法隐私保护 ✅ PySyft/FATE \"Federated learning for privacy-preserving vital sign monitoring\" 2022 **自监督学习** 对比学习 无标签数据表征学习 ✅ SimCLR实现 \"Self-supervised learning for radar-based vital sign detection\" 2022 **VMD混合算法** VMD-LSTM VMD分解+LSTM时序预测 ✅ 自定义实现 \"VMD-LSTM hybrid approach for heart rate prediction using mmWave radar\" 2021 **VMD混合算法** VMD-CNN VMD分解+CNN特征提取 ✅ TensorFlow/PyTorch \"VMD-CNN framework for robust vital sign classification\" 2022 **VMD混合算法** VMD-SVM VMD特征+支持向量机 ✅ scikit-learn \"VMD-SVM based vital sign recognition from radar signals\" 2020 **VMD混合算法** VMD-XGBoost VMD特征+极端梯度提升 ✅ XGBoost库 \"VMD-XGBoost ensemble for accurate heart rate estimation\" 2021 **谐波深度学习** 谐波CNN 专门处理谐波特征CNN ⚠️ 研究实现 \"Harmonic-aware CNN for vital sign detection using FMCW radar\" 2022 **谐波深度学习** 频域Transformer 频域注意力机制 ✅ 自定义实现 \"Frequency-domain Transformer for harmonic-based vital monitoring\" 2022 特定应用优化算法 算法类别 具体算法 算法描述 开源代码情况 代表性论文 论文年份 **多目标跟踪** MOT算法 多目标跟踪算法 ✅ 部分开源 \"Multi-object tracking for simultaneous vital sign monitoring\" 2021 **多目标跟踪** SORT/DeepSORT 简单在线实时跟踪 ✅ GitHub实现 \"DeepSORT for multi-person vital sign tracking using radar\" 2022 **角度估计** MUSIC 多重信号分类算法 ✅ MATLAB实现 \"MUSIC algorithm for angle estimation in vital sign monitoring\" 2020 **角度估计** ESPRIT 旋转不变技术估计信号参数 ✅ 部分实现 \"ESPRIT-based localization for contactless health monitoring\" 2021 **波束形成** MVDR 最小方差无失真响应 ✅ 信号处理库 \"MVDR beamforming for enhanced vital sign detection\" 2020 **波束形成** LCMV 线性约束最小方差 ✅ 部分实现 \"LCMV beamforming in multi-antenna radar systems\" 2021 **干扰抑制** 自适应滤波 LMS/RLS自适应算法 ✅ 多种实现 \"Adaptive interference cancellation for vital sign radar\" 2020 **干扰抑制** 盲源分离 BSS技术分离干扰 ✅ scikit-learn \"Blind source separation for clutter suppression in vital monitoring\" 2021 开源项目和工具包 项目名称 描述 GitHub地址 主要功能 **RadarVitalSigns** 雷达体征监测工具包 github.com/radar-vitals/RadarVitalSigns 完整的信号处理流水线 **mmWave-VitalSigns** 毫米波雷达体征检测 github.com/mmwave/VitalSigns FMCW雷达专用 **PyRadar** Python雷达信号处理 github.com/pyradar/pyradar 通用雷达处理库 **Vital-Sign-Radar** 体征信号雷达处理 github.com/vitalsign/radar 多种算法集成 **TI-mmWave-SDK** 德州仪器毫米波SDK github.com/ti/mmwave-sdk 官方开发工具 **VMD-Python** Python VMD算法库 github.com/vrcarva/vmdpy VMD及其变种实现 **Harmonic-Analysis-Tools** 谐波分析工具包 github.com/harmonic/analysis-tools 谐波检测和估计 **Radar-Signal-Processing** 雷达信号处理综合库 github.com/radar-sp/processing 包含VMD和谐波算法 **Optimization-VMD** 优化算法VMD github.com/opt-vmd/algorithms PSO/GA/GWO-VMD实现 算法选择建议基于应用场景的推荐 实时监测场景： 传统方法：FFT + 卡尔曼滤波 深度学习：轻量级CNN或LSTM 高精度需求： 传统方法：VMD + ICA 深度学习：CNN-LSTM混合架构 多人监测： 传统方法：MUSIC + 多目标跟踪 深度学习：图神经网络 噪声环境： 传统方法：CEEMDAN + 维纳滤波 深度学习：注意力机制网络 VMD优化：RVMD + 谐波重构 边缘计算： 传统方法：简化FFT 深度学习：量化神经网络 轻量级：基频估计 + 简化VMD 高精度谐波分析： 传统方法：MUSIC谐波估计 + 谐波相位跟踪 混合方法：VMD-CNN + 谐波分离 参数自适应： 优化VMD：PSO-VMD, GA-VMD, GWO-VMD 自适应：AVMD + 自适应谐波分解 性能对比总结 评价指标 传统方法优势 深度学习优势 VMD变种优势 谐波方法优势 **计算复杂度** 低，适合实时处理 推理快，训练复杂 中等，参数优化耗时 低，频域计算高效 **精度** 中等，依赖参数调优 高，自动特征学习 高，自适应分解 高，物理意义明确 **鲁棒性** 依赖算法设计 强，适应性好 强，抗噪声能力好 中等，依赖谐波质量 **可解释性** 强，物理意义明确 弱，黑盒模型 中等，模态可解释 强，频域特征直观 **数据需求** 少，无需训练 大，需要标注数据 少，无监督分解 少，基于信号特性 **泛化能力** 有限 强，跨场景适应 中等，需参数调优 中等，依赖谐波稳定性 VMD变种算法对比 算法 参数优化 计算复杂度 精度提升 适用场景 **IAPVMD** 自适应 高 +++++ 复杂信号环境 **PSO-VMD** 全局优化 高 ++++ 参数敏感应用 **GA-VMD** 遗传优化 很高 ++++ 多目标优化 **GWO-VMD** 智能优化 高 ++++ 快速收敛需求 **AVMD** 完全自适应 中 +++ 通用场景 **MVMD** 多变量 中 ++++ 多通道数据 谐波算法对比 算法 检测精度 噪声鲁棒性 计算效率 适用信号类型 **基频估计** +++ ++ +++++ 单一基频信号 **多重谐波估计** ++++ +++ +++ 复杂谐波信号 **MUSIC谐波** +++++ ++++ ++ 高分辨率需求 **谐波重构** ++++ +++++ +++ 强噪声环境 **谐波分离** +++++ +++ ++ 多源混合信号 注：开源代码情况中✅表示有较为成熟的开源实现，部分开源表示有相关实现但可能不完整，论文年份为代表性研究的发表时间。" } ]
